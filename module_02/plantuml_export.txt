@startuml

!theme mars

abstract class LinkablePart {
  +{abstract} void execute(float p_pression)
}

class Wheel {
  +void executeRotation(float p_force)
}

class Gear {
  +demultiplier: int
}

class GearLever {
  +gears: Gear[]
  +level: int
  +void change()
  +Gear* activeGear()
}

class Transmission {
  +weels: std::vector<Wheel*> 
  +void activate(float p_force)
}

class Crankshaft {
  +Transmission* transmission
  +void receiveForce(float p_volume)
}

class ExplosionChamber {
  +Crankshaft* crankshaft
  +void fill(float p_volume)
}

class Injector {
  +ExplosionChamber* explosionChamber
  +void execute(float p_pression)
}

class Motor {
  +injector: Injector
  +explosionChamber: ExplosionChamber
  +crankshaft: Crankshaft
  +void connectToTransmission(Transmission* p_transmission)
}

class Pedal {
  +target: LinkablePart*
  +void setTarget(LinkablePart* p_part)
  +void use(float p_pression)
}

class Direction {
  +wheels: Wheel[]
  +void turn(float p_angle)
}

class DAE {
  +direction: Direction*
  +force: float
  +void use(float p_angle)
}

class SteerWheel {
  +dae: DAE*
  +void turn(float p_angle)
}


class Brake {
  +wheel: Wheel*
  +void execute(float p_force)
  +void attackWheel(Wheel* p_wheel)
}

class BrakeController {
  +brakes: Brake[]
  +void execute(float p_pression)
}

class Cockpit  {
  +pedal: Pedal
  +steerWheel: SteerWheel
  +gearLever: GearLever
  
  + void managePedal(Pedal * _pedal)
  + void manageSteerWheel(SteerWheel * _steerWheel)
  + void manageGearLever(GearLever * _gearLever)
  
}

class Electronics {
  +dae: DAE
}

class Car {
  +brakeController: BrakeController
  +direction: Direction
  +transmission: Transmission
  +motor: Motor
  +electronics: Electronics
  +cockpit: Cockpit
  
}

Transmission  *--  Wheel: Composition
Crankshaft  *--  Transmission: Composition
GearLever <|-- "Singleton<GearLever>": Inheritance
ExplosionChamber  *--  Crankshaft: Composition
Injector  <|--  LinkablePart: Inheritance
Injector  *-- ExplosionChamber: Composition
Motor "1 " *-- Injector: Composition
Motor "1  " *-- ExplosionChambe: Compositionr
Motor "1  " *-- Crankshaft: Composition
Pedal *-- LinkablePart: Composition
Direction *-- Wheel: Composition
DAE *-- Direction: Composition
SteerWheel *-- DAE: Composition
Brake *-- Wheel: Composition
BrakeController *-- Brake: Composition
BrakeController <|-- LinkablePart: Inheritance
Cockpit *-- Pedal: Composition
Cockpit *-- SteerWheel: Composition
Cockpit *-- GearLever: Composition
Electronics *-- DAE: Composition
Car *-- BrakeController: Composition
Car *-- Direction: Composition
Car *-- Transmission: Composition
Car *-- Motor: Composition
Car *-- Electronics: Composition
Car *-- Cockpit: Composition
GearLever *-- Gear: Composition

@enduml